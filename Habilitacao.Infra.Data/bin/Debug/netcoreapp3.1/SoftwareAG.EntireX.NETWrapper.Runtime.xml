<?xml version="1.0"?>
<doc>
  <assembly>
    <name>
    SoftwareAG.EntireX.NETWrapper.Runtime
    </name>
  </assembly>
  <members>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.EntireXVersionAttribute">
      <summary>
      This attribute contains version information.
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.EntireXVersionAttribute.version">
      <summary>
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.EntireXVersionAttribute.#ctor(System.String)">
      <summary>
      </summary>
      <param name="version" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.EntireXVersionAttribute.UnregisterHandle(System.IntPtr)">
      <summary>
      Unregister the service
      </summary>
      <param name="handle">
      the registration information pointer
      </param>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.BrokerAttribute">
      <summary>
      This attribute contains the Broker ID.
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BrokerAttribute.#ctor(System.String)">
      <summary>
      </summary>
      <param name="name" />
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.ServiceAttribute">
      <summary>
      This attribute contains the service name.
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.ServiceAttribute.#ctor(System.String)">
      <summary>
      </summary>
      <param name="name" />
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.LibraryAttribute">
      <summary>
      This attribute contains the library name.
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.LibraryAttribute.#ctor(System.String)">
      <summary>
      </summary>
      <param name="name" />
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.NamespaceAttribute">
      <summary>
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.NamespaceAttribute.#ctor(System.String)">
      <summary>
      </summary>
      <param name="name" />
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.ProgramAttribute">
      <summary>
      This attribute contains the program name.
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.ProgramAttribute.#ctor(System.String)">
      <summary>
      </summary>
      <param name="name" />
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.CvmProtocolAttribute">
      <summary>
      Protocol version
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.CvmProtocolAttribute.#ctor(System.String)">
      <summary>
      </summary>
      <param name="version" />
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.CvmMetadataAttribute">
      <summary>
      SM
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.CvmMetadataAttribute.#ctor(System.String)">
      <summary>
      </summary>
      <param name="value" />
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.CvmFormatAttribute">
      <summary>
      SM
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.CvmFormatAttribute.#ctor(System.String)">
      <summary>
      Format buffer
      </summary>
      <param name="buffer" />
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.CvmValueAttribute">
      <summary>
      Value buffer
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.CvmValueAttribute.#ctor(System.String)">
      <summary>
      ///
      </summary>
      <param name="buffer" />
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.CvmStringAttribute">
      <summary>
      String buffer
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.CvmStringAttribute.#ctor(System.String)">
      <summary>
      ///
      </summary>
      <param name="buffer" />
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute">
      <summary>
      This attribute contains type, length (fixed or dynamic) and dimension (fixed or dynamic) information.
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.idlType">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.preDecimal">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.postDecimal">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.Unbounded">
      <summary>
      true for unbounded Arrays
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.Trim">
      <summary>
      true if trailing blanks should be truncated
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.Length">
      <summary>
      used for A, AV, B, BV, N, NU , P, PU , D, T
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.Dim">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.Dim2">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.Dim3">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.Dimensions">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.Elements">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.CallInfo">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.Id">
      <summary>
      index in group/struct
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.IsArray">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.IsIn">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.IsOut">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.IsField">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.BufferSize">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.Parameter">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.Info">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.ClientSide">
      <summary>
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.Name">
      <summary>
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.#ctor(SoftwareAG.EntireX.NETWrapper.Runtime.IdlType)">
      <summary>
      </summary>
      <param name="t" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.SendAsAttribute.#ctor(SoftwareAG.EntireX.NETWrapper.Runtime.IdlType,System.String)">
      <summary>
      </summary>
      <param name="t" />
      <param name="direction" />
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric">
      <summary>
      Implementation of decimal values without upper and lower limit and a default number
            of 99 digits after the decimal sign.
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.#ctor(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Copy constructor
      </summary>
      <param name="numeric">
      The value to be copied
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.#ctor(System.Decimal)">
      <summary>
      Constructor translating a Decimal number
      </summary>
      <param name="value">
      The decimal value
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.#ctor(System.Int32)">
      <summary>
      Constructor translating an Int32 number
      </summary>
      <param name="value">
      The Int32 value
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.#ctor(System.Int64)">
      <summary>
      Constructor translating an Int64 number
      </summary>
      <param name="value">
      The Int64 value
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.#ctor(System.Double)">
      <summary>
      Constructor translating a double to its exact BigNumeric representation
      </summary>
      <param name="value">
      The double value
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.#ctor(System.String)">
      <summary>
      Constructor converting the string representaion of a number into a BigNumeric object.
            The string representation consists of an optional sign, '+' or '-', followed by a 
            sequence of zero or more decimal digits, optionally followed by a fraction which consists
            of a decimal point followed by zero or more decimal digits and optionally followed by an 
            exponent which consists of the character 'e' or 'E' followed by one or more decimal digits.
            The value must not exceed the size of the N(U)/P(U) data type.
      </summary>
      <param name="value">
      The string representation of the value
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.#ctor(System.String,System.Globalization.CultureInfo)">
      <summary>
      Constructor converting the string representation of a number into a BigNumeric object.
            The desired culture info is used to interpret the numeric string.
      </summary>
      <param name="value">
      The string representation of the value
      </param>
      <param name="cultureInfo">
      The culture info to be used
      </param>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.Zero">
      <summary>
      Returns a BigNumeric representing the value 0
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.One">
      <summary>
      Returns a BigNumeric representing the value 1
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.MinusOne">
      <summary>
      Returns a BigNumeric representing the value -1
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.Scale">
      <summary>
      maximum number of digits behind decimal sign.
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.GetHashCode">
      <summary>
      Returns the hash code of the instance.
      </summary>
      <returns>
      The hashcode
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.ToString">
      <summary>
      Converts the value of the instance to its string representation.
      </summary>
      <returns>
      The string representation
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.ToString(System.Globalization.NumberFormatInfo)">
      <summary>
      Converts the value of the instance to its string representation
            using the desired number Format
      </summary>
      <param name="info">
      The formatting information
      </param>
      <returns />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.Truncate">
      <summary>
      Returns the integral part of the number.
      </summary>
      <returns>
      The integral part
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.Truncate(System.Int32)">
      <summary>
      Returns a new BigNumeric with a maximum number of digits after the decimal sign.
            The number is truncated to the desired number of digits behind the decimal 
            point if necessary.
      </summary>
      <param name="scale">
      Maximum number of digits after decimal sign
      </param>
      <returns />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.Round(System.Int32)">
      <summary>
      Returns a new BigNumeric with a maximum number of digits after the decimal sign.
            The number is rounded to the desired precision if necessary. Rounding is 
            performed according to the rounding mode "HALF_UP" of JAVA class BigDecimal.
      </summary>
      <param name="scale">
      Maximum number of digits after decimal sign
      </param>
      <returns />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.isNegative">
      <summary>
      Returns true for negative numbers
      </summary>
      <returns>
      true if negative
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.Random(System.Int32,System.Int32)">
      <summary>
      Create a random BigNumeric number with the desired number 
            of predecimal and a maximum of 99 postdecimal digits.
      </summary>
      <param name="preDecimal">
      Number of digits before the decimal sign
      </param>
      <param name="postDecimal">
      >Number of digits after the decimal sign
      </param>
      <returns />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_Addition(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Adds two BigNumerics. The result inherits the scale of operand1.
      </summary>
      <param name="operand1" />
      <param name="operand2" />
      <returns>
      The result
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_Subtraction(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Subtracts two BigNumerics. The result inherits the scale of operand1.
      </summary>
      <param name="operand1" />
      <param name="operand2" />
      <returns>
      The result
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_Multiply(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Multiplies two BigNumerics. The result inherits the scale of operand1.
      </summary>
      <param name="operand1" />
      <param name="operand2" />
      <returns>
      The result
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_Division(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Divides two BigNumerics. The result inherits the scale of operand1.
      </summary>
      <param name="operand1" />
      <param name="operand2" />
      <returns>
      The result
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_Implicit(System.Decimal)~SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric">
      <summary>
      Converts a decimal value to a BigNumeric
      </summary>
      <param name="value">
      The decimal value
      </param>
      <returns>
      The BigNumeric value
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_Implicit(System.Int64)~SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric">
      <summary>
      Converts a long value to a BigNumeric
      </summary>
      <param name="value">
      The long value
      </param>
      <returns>
      The BigNumeric value
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_Implicit(System.Int32)~SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric">
      <summary>
      Converts an int value to a BigNumeric
      </summary>
      <param name="value">
      The long value
      </param>
      <returns>
      The BigNumeric value
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_Explicit(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)~System.Decimal">
      <summary>
      Converts the BigNumeric to a decimal, throws an exception if 
            the value doesn't fit the decimal's numeric range.
      </summary>
      <param name="value">
      The number to be converted
      </param>
      <returns>
      The decimal value
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_LessThan(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Compares the value of two BigNumerics
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if big1 less than big2, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_LessThanOrEqual(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Compares the value of two BigNumerics
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if big1 less or equal big2, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_GreaterThan(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Compares the value of two BigNumerics
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if big1 greater than big2, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_GreaterThanOrEqual(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Compares the value of two BigNumerics
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if big1 greater or equal big2, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_Equality(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Compares the value of two BigNumerics
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if big1 is equal big2, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_Inequality(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Compares the value of two BigNumerics
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if big1 is not equal big2, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.Equals(System.Object)">
      <summary>
      Compares the desired object with the value of this
      </summary>
      <param name="o" />
      <returns>
      true if o is a BigNumeric with the value of this, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_LessThan(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,System.Decimal)">
      <summary>
      Compares the value of a BigNumeric with a decimal
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if big less than dec, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_LessThanOrEqual(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,System.Decimal)">
      <summary>
      Compares the value of a BigNumeric with a decimal
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if big less or equal dec, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_GreaterThan(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,System.Decimal)">
      <summary>
      Compares the value of a BigNumeric with a decimal
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if big greater than dec, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_GreaterThanOrEqual(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,System.Decimal)">
      <summary>
      Compares the value of a BigNumeric with a decimal
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if big greater or equal dec, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_Equality(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,System.Decimal)">
      <summary>
      Compares the value of a BigNumeric with a decimal
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if equal, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_Inequality(SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric,System.Decimal)">
      <summary>
      Compares the value of a BigNumeric with a decimal
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if not equal, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_LessThan(System.Decimal,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Compares the value of a decimal with a BigNumeric
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if dec less than big, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_LessThanOrEqual(System.Decimal,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Compares the value of a decimal with a BigNumeric
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if dec less or equal big, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_GreaterThan(System.Decimal,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Compares the value of a decimal with a BigNumeric
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if dec greater than big, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_GreaterThanOrEqual(System.Decimal,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Compares the value of a decimal with a BigNumeric
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if dec greater or equal big, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_Equality(System.Decimal,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Compares the value of a decimal with a BigNumeric
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if equal, false otherwise
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric.op_Inequality(System.Decimal,SoftwareAG.EntireX.NETWrapper.Runtime.BigNumeric)">
      <summary>
      Compares the value of a decimal with a BigNumeric
      </summary>
      <param name="left" />
      <param name="right" />
      <returns>
      true if not equal, false otherwise
      </returns>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.Broker">
      <summary>
      This class represents an EntireX Broker session and handles the 
            connections to the Broker
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.BrokerID">
      <summary>
      BrokerID property.
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.UserID">
      <summary>
      UserID property.
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.Password">
      <summary>
      Password property.
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.SecurityToken">
      <summary>
      SecurityToken property.
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.Token">
      <summary>
      Token propery.
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.EncryptionLevel">
      <summary>
      deprecated, for encrypted transport we strongly recommend using the Secure Sockets Layer/Transport Layer Security protocol. See SSL/TLS and Certificates with EntireX.
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.CompressionLevel">
      <summary>
      CompressionLevel property.
            0: no compression,
            1: compress with best speed,
            6: default compression,
            8: deflated,
            9: best compression
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.ForceLogon">
      <summary>
      ForceLogon property.
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.BrokerSecurity">
      <summary>
      BrokerSecurity
            'N' : no security
            'Y' : default EntireX security
            'U' : user specific security
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.#ctor">
      <summary>
      Broker constructor for default host and default userName.
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.#ctor(System.String)">
      <summary>
      Broker constructor for given host name and default user name.
      </summary>
      <param name="name">
      e.g "localhost:1971"
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.#ctor(System.String,System.String)">
      <summary>
      Broker constructor for given host name and user name.
      </summary>
      <param name="name">
      e.g "localhost:1971"
      </param>
      <param name="userName">
      "ERX-USER"
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.#ctor(System.String,System.String,System.String)">
      <summary>
      Broker constructor for given host name, user name and token.
      </summary>
      <param name="name">
      e.g. "localhost:1971"
      </param>
      <param name="userName">
      e.g. "ERX-USER"
      </param>
      <param name="token">
      token
      </param>
    />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.Logon">
      <summary>
      Logon to the Broker.
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.Logon(System.String)">
      <summary>
      Logon to the Broker.
      </summary>
      <param name="password">
      password
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.Logon(System.String,System.String)">
      <summary>
      Logon to the Broker.
      </summary>
      <param name="password">
      password
      </param>
      <param name="newPassword">
      new password
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.Logon(System.String,System.String,System.String)">
      <summary>
      Logon to the Broker.
      </summary>
      <param name="userName">
      user
      </param>
    />
      <param name="token">
      token
      </param>
    />
      <param name="password">
      password
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.Logoff">
      <summary>
      Logoff from the Broker.
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Broker.ApplicationName">
      <summary>
      The application name used for the client calls. A maximum of 64 characters is allowed.
      </summary>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.ByteHolder">
      <summary>
      Summary description for ByteHolder.
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.ByteHolder.#ctor">
      <summary>
      constructor for out parameter
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.ByteHolder.#ctor(System.Array)">
      <summary>
      constructor for byte arrays
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.ByteHolder.GetArray">
      <summary>
      get the byte array
      </summary>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.ArrayHolder">
      <summary>
      Summary description for ByteHolder.
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.ArrayHolder.#ctor">
      <summary>
      default constructor
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.ArrayHolder.#ctor(System.Array)">
      <summary>
      constructor for 1-DIM byte array
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.ArrayHolder.array">
      <summary>
      get/set the byte array
      </summary>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.CallInformationBlock">
      <summary>
      base ctor
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.CallInformationBlock.#ctor(System.Text.Encoding,System.String,System.Reflection.MethodInfo,System.Object[])">
      <summary>
      ctor for client side wrapping
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.CallInformationBlock.#ctor">
      <summary>
      ctor for server side wrapping
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.CallInformationBlock.GetParameterDescription(System.String,System.String)">
      <summary>
      Get the parameter description
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.CallInformationBlock.getResponse">
      <summary>
      Returns response, set in CallServer().
      </summary>
      <returns>
      response
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.CallInformationBlock.CallServer(System.String,System.String,System.IntPtr)">
      <summary>
      calls the server stub
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.CallInformationBlock.Finalize">
      <summary>
      Free global memory in case of exceptions.
      </summary>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.CALL_INFORMATION_BLOCK">
      <summary>
      Summary description for CALL_INFORMATION_BLOCK.
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.CALL_INFORMATION_BLOCK.#ctor">
      <summary>
      default ctor
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.CALL_INFORMATION_BLOCK.Finalize">
      <summary>
      free paramter defintion area and buffer for CALL_INFORMATION_BLOCK
      </summary>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.Compress">
      <summary>
      Compress enumeration
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.Compress.NO_COMPRESSION">
      <summary>
      No compression
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.Compress.BEST_SPEED">
      <summary>
      Best speed compression
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.Compress.Two">
      <summary>
      Level two compression
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.Compress.Three">
      <summary>
      Level three compression
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.Compress.Four">
      <summary>
      Level four compression
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.Compress.Five">
      <summary>
      Level five compression
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.Compress.DEFAULT_COMPRESSION">
      <summary>
      Default compression
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.Compress.Seven">
      <summary>
      Level seven compression
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.Compress.DEFLATED">
      <summary>
      Deflated compression
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.Compress.BEST_COMPRESSION">
      <summary>
      Best compression
      </summary>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.Construction">
      <summary>
      Summary description for Construction.
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Construction.GroupArray(System.Type,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
      <param name="t" />
      <param name="dim1" />
      <param name="dim2" />
      <param name="dim3" />
      <returns />
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.ERX">
      <summary>
      Wrapper class for erx.dll
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ERX.Location">
      <summary>
      C:\SoftwareAG_V10_1\EntireX\bin\X86
      </summary>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.NETWrapperEventLogInstaller">
      <summary>
      EventLog installer class
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.NETWrapperEventLogInstaller.#ctor">
      <summary>
      Installs protocol EntireX with source "NETWrapper Runtime"
      </summary>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage">
      <summary>
      .NET Wrapper Error Messages
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.Internal">
      <summary>
      Internal error
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.Unsupported">
      <summary>
      Unsupported functionality + additional text 
            Check documentation for information on the given functionality
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.InvalidSSLParm">
      <summary>
      Invalid SSL parameter
            The format of the SSL Broker URL is invalid
            Check and correct the SSL URL
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.Marshaling">
      <summary>
      Data marshaling error
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.Unmarshaling">
      <summary>
      Data unmarshaling error
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.MissingSendAs">
      <summary>
      Missing SendAs Attribute
            In the generated wrapper code there is a missing SendAs Attribute
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.UnsupportedData">
      <summary>
      Unsupported data type
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.InvalidEncLevel">
      <summary>
      Invalid encryptionLevel value
            deprecated, for encrypted transport we strongly recommend using the Secure Sockets Layer/Transport Layer Security protocol. See SSL/TLS and Certificates with EntireX.
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.InvalidCompLevel">
      <summary>
      Invalid compressionLevel value
            Correct the compressionLevel value
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.CannotFindErxDir">
      <summary>
      erx.dll in folder {0} missing
            The file erx.dll is not in the folder {0}
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.CannotLoadErxDLL">
      <summary>
      Cannot load erx.dll
            Check whether EntireX has been installed correctly
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.NoConvInConv">
      <summary>
      Cannot open a new conversation within a conversation
            Correct your application code
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.MissingLibName">
      <summary>
      Missing library name. Please use Service(libraryName) constructor
            Correct your application code
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.ArrayOutOfBounds">
      <summary>
      Array dimension(s) out of Bounds
            The size of one or more dimensions of the user data exceeds the size defined in the IDL parameter
            Correct your application code
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.UnsupportedObjectType">
      <summary>
      Unsupported object type
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.CannotSetSetRPCPasswd">
      <summary>
      Cannot set RPC password, no RPCUser defined
            Define an RPC user before setting the RPC password
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.InvalidServerAddr">
      <summary>
      Invalid ServerAddress
            Correct the format of ServerAddress
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.UnsignedType">
      <summary>
      NU/PU are unsigned types
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.ConversionError">
      <summary>
      Error unmarshaling N(U)/P(U)
            Error in the transferred data
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.CannotLoadLibrary">
      <summary>
      Cannot load library, invalid server library
            DLL with the required library name does not contain an object with the LibraryAttribute
            Correct your server implementation
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.CannotLocateLibrary">
      <summary>
      Cannot locate library in file
            Error in the server DLL
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.CannotFindProgram">
      <summary>
      Program/Method not found
            Server DLL does not contain the required program/method
            Correct your server implementation or client request
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.ServerError">
      <summary>
      User error in server library
            There was an uncaught exception in the user's server implementation
            Correct the server implementation
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.InvalidUnboundedArray">
      <summary>
      Invalid unbounded array
            Error in the definition of an unbounded array
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.CannotSetBrokerInConv">
      <summary>
      Cannot set Broker during a conversation
            You cannot change the broker within a conversation
            Correct your client implementation
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.CannotFindRunTime">
      <summary>
      SoftwareAG.EntireX.NETWrapper.Runtime.dll not found
            The DLL was not found in the appropriate place
            Please read the documentation chapter about server-side wrapping and obey the rules defined there
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.InvalidBrokerSecurity">
      <summary>
      Invalid BrokerSecurity value
            The value for the BrokerSecurity is invalid
            Correct the value in your implementation
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.CannotCreateCIB">
      <summary>
      Cannot create CALL_INFORMATION_BLOCK
            The creation of the CALL_INFORMATION_BLOCK failed
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.InvalidIndex">
      <summary>
      Invalid index {0} for field {1}.{2}
            The index {0} of field {2} in group/struct {1} is wrong
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.RMStateNotSet">
      <summary>
      State for reliable messaging not set
            User error in the implementation of reliable messaging
            Correct the implementation
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.RMUnexpectedError">
      <summary>
      Unexpected error
            There is an unexpected error running with reliable messaging
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.RMServerAddressNotSet">
      <summary>
      SERVER_ADDRESS for reliable messaging not set
            The SERVER_ADDRESS for the request is missing
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.NumberExceedsRange">
      <summary>
      Numeric value of {0} does not fit in {1}{2}.{3}
            The value of parameter {0} exceeds the range of the numeric field {1}{2}.{3}
            Inspect the user implementation
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.InternalError">
      <summary>
      Internal error in method {0}
            An internal error in method {0} occured
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.ByteArrayDontFit">
      <summary>
      Length of byte array {0} does not fit the definition
            The length of the byte array exceeds the length defined in the IDL
            Correct your client or server implementation
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.IndexMissing">
      <summary>
      Index {0} for field {1}.{2} is missing
            Field {2} at index {0} in group/struct {1} is missing
            Contact Software AG support
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.XMLFileMissing">
      <summary>
      The file SoftwareAG.EntireX.NETWrapper.Runtime.xml is missing.
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.LibraryNotCofigured">
      <summary>
      The Library is not configured in rpcserver.exe.config.
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.InvalidNumber">
      <summary>
      The number doesn't fit the requirements
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.InvalidNumeric">
      <summary>
      The number doesn't fit the requirements
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.CannotReadServerConfiguration">
      <summary>
      Server configuration file not found or EntireX Assemblies section missing
            The configuration file for the rpcserver.exe was not found or doesn't contain the "EntireX Assemblies" section.
            Please read the documentation chapter about server-side wrapping and obey the rules defined there
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.getErrorMessage(System.Int32)">
      <summary>
      Return the errormessage in case of XEceptions.
      </summary>
      <param name="rc">
      errorCode
      </param>
      <returns>
      The error message.
      </returns>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.ErrorMessage.LastError">
      <summary>
      Message of user exception on server side.
      </summary>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.XException">
      <summary>
      EntireX Exception
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.XException.errorCode">
      <summary>
      contains the error code - internal
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.XException.Message">
      <summary>
      contains the error message
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.XException.#ctor(System.String,System.Exception)">
      <summary>
      Wrap ApplicationException, to prevent stacked XException
      </summary>
      <param name="message" />
      <param name="e" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.XException.logException(System.String,System.Exception)">
      <summary>
      Write the exceptions stacktrace to the Windows Event Log.
      </summary>
      <param name="message">
      The message
      </param>
      <param name="ex">
      The exception thrown
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.XException.logMessage(System.String,System.Diagnostics.EventLogEntryType)">
      <summary>
      Writes a message with the desired entry type to the Windows Event Log
      </summary>
      <param name="message">
      The message
      </param>
      <param name="entryType">
      The entry type
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.XException.initEventLog">
      <summary>
      Initilisation for the first usage.
      </summary>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType">
      <summary>
      Type definitions in EntireX IDL File
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.A">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.B">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.D">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.F4">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.F8">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.I1">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.I2">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.I4">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.K">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.L">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.N">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.NU">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.P">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.PU">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.T">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.AV">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.BV">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.KV">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.Group">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.Struct">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.A1">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.B1">
      <summary>
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.U">
      <summary>
      Unicode string with fixed lenght
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.IdlType.UV">
      <summary>
      Unicode string with variable lenght
      </summary>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.Ref">
      <summary>
      Reference helper class
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.#ctor(System.DateTime@)">
      <summary>
      </summary>
      <param name="dt" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.#ctor(System.Boolean@)">
      <summary>
      </summary>
      <param name="i" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.#ctor(System.Char@)">
      <summary>
      </summary>
      <param name="c" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.#ctor(System.Byte@)">
      <summary>
      </summary>
      <param name="b" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.#ctor(System.SByte@)">
      <summary>
      </summary>
      <param name="i" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.#ctor(System.Decimal@)">
      <summary>
      </summary>
      <param name="i" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.#ctor(System.Single@)">
      <summary>
      </summary>
      <param name="i" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.#ctor(System.Double@)">
      <summary>
      </summary>
      <param name="i" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.#ctor(System.Int16@)">
      <summary>
      </summary>
      <param name="i" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.#ctor(System.Int32@)">
      <summary>
      </summary>
      <param name="i" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.op_Implicit(SoftwareAG.EntireX.NETWrapper.Runtime.Ref)~System.Boolean">
      <summary>
      </summary>
      <param name="r" />
      <returns />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.op_Implicit(SoftwareAG.EntireX.NETWrapper.Runtime.Ref)~System.Char">
      <summary>
      </summary>
      <param name="r" />
      <returns />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.op_Implicit(SoftwareAG.EntireX.NETWrapper.Runtime.Ref)~System.Byte">
      <summary>
      </summary>
      <param name="r" />
      <returns />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.op_Implicit(SoftwareAG.EntireX.NETWrapper.Runtime.Ref)~System.SByte">
      <summary>
      </summary>
      <param name="r" />
      <returns />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.op_Implicit(SoftwareAG.EntireX.NETWrapper.Runtime.Ref)~System.Decimal">
      <summary>
      </summary>
      <param name="r" />
      <returns />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.op_Explicit(SoftwareAG.EntireX.NETWrapper.Runtime.Ref)~System.Single">
      <summary>
      </summary>
      <param name="r" />
      <returns />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.op_Implicit(SoftwareAG.EntireX.NETWrapper.Runtime.Ref)~System.Double">
      <summary>
      </summary>
      <param name="r" />
      <returns />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.op_Implicit(SoftwareAG.EntireX.NETWrapper.Runtime.Ref)~System.Int16">
      <summary>
      </summary>
      <param name="r" />
      <returns />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.op_Implicit(SoftwareAG.EntireX.NETWrapper.Runtime.Ref)~System.Int32">
      <summary>
      </summary>
      <param name="r" />
      <returns />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Ref.op_Implicit(SoftwareAG.EntireX.NETWrapper.Runtime.Ref)~System.DateTime">
      <summary>
      </summary>
      <param name="r" />
      <returns />
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.MethodHolder">
      <summary>
      Holds the information for the method
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.MethodHolder.#ctor">
      <summary>
      Create the instance
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.MethodHolder.Finalize">
      <summary>
      Remove garbage
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.MethodHolder.ParameterDescription">
      <summary>
      get/set the ParameterDescription for the method
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.MethodHolder.GetParameterDescription">
      <summary>
      returns the ParameterDescription for the method
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.MethodHolder.ParameterCount">
      <summary>
      get/set the number of parameters in the parameter defintion block
            for the method
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.MethodHolder.GetParameterCount">
      <summary>
      returns the number of parameters in the parameter defintion block
            for the method
      </summary>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.SERVER_ADDRESS">
      <summary>
      Summary description for SERVER_ADDRESS.
      </summary>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.Service">
      <summary>
      EntireX Service class
      </summary>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.Service.ReliableState">
      <summary>
      Set the Reliable State.
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.Service.ReliableState.RELIABLE_OFF">
      <summary>
      RELIABLE_OFF (0) - default value
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.Service.ReliableState.RELIABLE_AUTO_COMMIT">
      <summary>
      RELIABLE_AUTO_COMMIT (1)
      </summary>
    </member>
    <member name="F:SoftwareAG.EntireX.NETWrapper.Runtime.Service.ReliableState.RELIABLE_CLIENT_COMMIT">
      <summary>
      RELIABLE_CLIENT_COMMIT (2)
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Service.Broker">
      <summary>
      Broker property
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Service.Library">
      <summary>
      Library property
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Service.ServerAddress">
      <summary>
      ServerAddress property
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Service.RPCUserID">
      <summary>
      RPCUserID property
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Service.RPCPassword">
      <summary>
      RPCPassword property
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Service.CharacterEncoding">
      <summary>
      CharacterEncoding property
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Service.NaturalLogon">
      <summary>
      NaturalLogon property
      </summary>
    </member>
    <member name="P:SoftwareAG.EntireX.NETWrapper.Runtime.Service.Timeout">
      <summary>
      Timeout property (default: 50 sec)
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.#ctor">
      <summary>
      Default Service constructor with default Broker, Class/Server/Service and library
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.#ctor(System.String)">
      <summary>
      Service constructor with default Broker and Class/Server/Service
      </summary>
      <param name="libraryName">
      library name
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.#ctor(SoftwareAG.EntireX.NETWrapper.Runtime.Broker)">
      <summary>
      Service constructor with default Class/Server/Service and library name
      </summary>
      <param name="broker">
      Broker instance
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.#ctor(SoftwareAG.EntireX.NETWrapper.Runtime.Broker,System.String)">
      <summary>
      Service constructor with default library name
      </summary>
      <param name="broker">
      Broker instance
      </param>
      <param name="trinity">
      e.g. RPC/SRV1/CALLNAT
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.#ctor(SoftwareAG.EntireX.NETWrapper.Runtime.Broker,System.String,System.String)">
      <summary>
      Service constructor
      </summary>
      <param name="broker">
      Broker instance
      </param>
      <param name="trinity">
      e.g. RPC/SRV1/CALLNAT
      </param>
      <param name="libraryName">
      library name
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.Finalize">
      <summary>
      Finalize
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.UserIDAndPassword(System.String,System.String)">
      <summary>
      Set RPC user ID and password
      </summary>
      <param name="user" />
      <param name="password" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.Credentials(System.String,System.String)">
      <summary>
      Set RPC user and password - deprecated
      </summary>
      <param name="user" />
      <param name="password" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.OpenConversation">
      <summary>
      Open a Conversation
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.CloseConversation">
      <summary>
      Close a conversation with backout
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.CloseConversationCommit">
      <summary>
      Close a conversation with commit
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.Invoke(System.String,System.String,System.Object[])">
      <summary>
      Invoke the service with the library and method name
      </summary>
      <param name="library" />
      <param name="method" />
      <param name="objArray" />
      <returns>
      object returnValue or null
      </returns>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.Send(System.Reflection.MethodInfo,System.Object[])">
      <summary>
      Send an RPC call
      </summary>
      <param name="methodInfo" />
      <param name="objArray" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.TerminateServer(System.Int32,System.String@)">
      <summary>
      Terminate Server
      </summary>
      <param name="ShutdownCommand" />
      <param name="Message" />
      <returns name="ERXeReturnCode" />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.SetReliableState(System.Int32)">
      <summary>
      Set the reliable state
            
            possible values: RELIABLE_OFF (0)
                             RELIABLE_AUTO_COMMIT (1)
                             RELIABLE_CLIENT_COMMIT (2)
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.GetReliableState(System.Int32@)">
      <summary>
      Retrieves the Reliable State of the current thread.
      </summary>
      <param name="uReliableState">
      The state for the current thread
      </param>
      <returns />
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.ReliableCommit">
      <summary>
      Do a commit in Reliable State "ClientCommit"
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.ReliableRollback">
      <summary>
      Do a rollback in Reliable State "ClientCommit"
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.GetReliableID(System.Text.StringBuilder@)">
      <summary>
      GetReliable ID
      </summary>
      <param name="retStr">
      The message ID
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.GetReliableStatus(System.Text.StringBuilder,System.Text.StringBuilder@)">
      <summary>
      Retrieve the status of the meessage
      </summary>
      <param name="ReliableID">
      The message ID
      </param>
      <param name="ReliableStatus">
      The status of the message
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Service.Ping(System.Int32)">
      <summary>
      Ping the Server and expect an answer with a maximum
            string length of messageLength
      </summary>
      <param name="messageLength" />
      <returns>
      The Server response
      </returns>
    </member>
    <member name="T:SoftwareAG.EntireX.NETWrapper.Runtime.Trace">
      <summary>
      Support ERX trace.
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Trace.Init">
      <summary>
      Initialize ERX trace. For internal usage only!
      </summary>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Trace.StackTrace(System.Exception)">
      <summary>
      Writes the exceptions stack trace to trace file.
      </summary>
      <param name="e">
      the exception thrown
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Trace.WriteLine(System.String)">
      <summary>
      Writes a new line with Label "NET: " to the trace file.
      </summary>
      <param name="message">
      The string to be written
      </param>
    </member>
    <member name="M:SoftwareAG.EntireX.NETWrapper.Runtime.Parameter.isGroupMember">
      <returns>
      true if group member
      </returns>
    </member>
  </members>
</doc>
